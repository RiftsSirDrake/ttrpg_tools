<% content_for :page_title, 'Hexmap v1' %>

<div class="pagetitle">
  <h1>Hexmap V1</h1>
  <nav>
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item"><%= link_to "Sectors", sectors_path %></li>
      <li class="breadcrumb-item"><%= link_to "Systems", systems_path(sector_id: params[:sector_id]) %></li>
    </ol>
  </nav>
</div>

<section>
  <div class="row">
    
    <div class="col-lg-10">
    	<div id="hexmap" class="card"></div>
    </div>
    
    <div class="col-lg-2">
      <div class="card">
        <div class="card-body">
          <h6 class="card-title">Legend</h6>
          <table class="table table-sm">
            <thead>
            </thead>
            <tbody>
              <% @factions.order(:name).each do |faction| %>
                <tr>
                  <td><%= faction.name %></td>
                  <td><i class="bi bi-flag-fill" style="color: <%= faction.color_code %>; font-size: 1.75em"></i></td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      </div>
      
    </div>
  </div>
</section>


<script>
	var data = gon.data
	hex = new OI.hexmap(document.getElementById('hexmap'),{
		// The HexJSON layout
		'hexjson':{
			"layout":"odd-q",
			"hexes": data
		},
		'label':{
			'show': true,	// Show a label
			'clip': true,	// Make sure the label is clipped to the hexagon
			// Define a function to format the hex labels
			// It is passed:
			//  * txt - a text string with the hex's name
			//  * attr - an object containing:
			//		* size - the size in pixels
			//		* font-size - the font size in pixels
			//		* x - the horizontal position in pixels
			//		* y - the vertical position in pixels
			//		* hex - the hexagon's HexJSON properties
			'format': function(txt,attr){
				tspans = '<tspan class="off">'+txt.substr(0,3)+'</tspan>';
				lines = txt.split(/ /);
				lines.push(attr.hex.hex_loc.toLocaleString());
				return tspans;
			}
		},
	});

  // Make a tooltip
  hex.on('mouseover',function(e){
  	var svg,tip,bb,bbo,hex;
  	svg = e.data.hexmap.el;
  	hex = e.target;
  	// Get any existing tooltip for this hexmap
  	tip = svg.querySelector('.hex-tip');
  	if(!tip){
  		// Add a new tooltip
  		tip = document.createElement('div');
  		tip.classList.add('hex-tip');
  		svg.appendChild(tip);
  	}
  	// Update contents of tooltip
  	tip.innerHTML = '<a href="/systems/'+e.data.data.sys_id+'">'+e.data.data.n+'</a>'+
  	  '<br />'+'Traveller Coordinates '+e.data.data.hex_loc.toLocaleString()+
  	  '<br /> Hexmap Coordinates q:'+e.data.data.q+' r:'+e.data.data.r;
  	// Update position of tooltip
  	bb = hex.getBoundingClientRect();
  	bbo = svg.getBoundingClientRect();
  	tip.style.left = Math.round(bb.left + bb.width/2 - bbo.left + svg.scrollLeft)+'px';
  	tip.style.top = Math.round(bb.top + bb.height/2 - bbo.top -15)+'px';
  });

</script>