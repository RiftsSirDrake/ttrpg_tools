<style>
  #hexmap1 { height: 1200px; width: 100%; margin-top: 1em; position: relative; animation-duration: 0.3s; }
  #hexmap1 .hex-cell { stroke: black; stroke-width: 0; transition: fill 0.2s ease-in, stroke 0.2s ease-in, stroke-width 0.2s ease-in; }
  #hexmap1 .hex-cell.hover { stroke-width: 4px; }
  @media only screen and (max-width: 700px) {
  	/* Don't bother with labels if it is too small */
  	#hexmap1 .hex-label { display: none; }
  }
  #hexmap1 .hex-tip { position: absolute; text-align: center; background: black; color: white; padding: 0.25em 0.5em; transform: translate3d(-50%,50%,0); transition: left 0.1s linear, top 0.1s linear; border-radius: 4px; }
  #hexmap1 .hex-tip::after { content: ""; position: absolute; bottom: auto; width: 0; height: 0; border: 0.5em solid transparent; left: 50%; top: 0%; transform: translate3d(-50%,-100%,0); border-color: transparent; border-bottom-color: black; }	
  
  #hexmap1 a { text-decoration: none;}
</style>

<figure>
	<div id="hexmap1"></div>
	<figcaption>Polcaris Sector map created by Enclave Rangers. (For use in Shapers TTRGP Cortex Campaign)</figcaption>
</figure>

<script>
	var data = gon.data
	hex = new OI.hexmap(document.getElementById('hexmap1'),{
		// The HexJSON layout
		'hexjson':{
			"layout":"odd-q",
			"hexes": data
		},
		'label':{
			'show': true,	// Show a label
			'clip': false,	// Make sure the label is clipped to the hexagon
			// Define a function to format the hex labels
			// It is passed:
			//  * txt - a text string with the hex's name
			//  * attr - an object containing:
			//		* size - the size in pixels
			//		* font-size - the font size in pixels
			//		* x - the horizontal position in pixels
			//		* y - the vertical position in pixels
			//		* hex - the hexagon's HexJSON properties
			'format': function(txt,attr){
				tspans = '<tspan class="off">'+txt.substr(0,3)+'</tspan>';
				lines = txt.split(/ /);
				lines.push(attr.hex.hex_loc.toLocaleString());
				return tspans;
			}
		},
	});

  // Make a tooltip
  hex.on('mouseover',function(e){
  	var svg,tip,bb,bbo,hex;
  	svg = e.data.hexmap.el;
  	hex = e.target;
  	// Get any existing tooltip for this hexmap
  	tip = svg.querySelector('.hex-tip');
  	if(!tip){
  		// Add a new tooltip
  		tip = document.createElement('div');
  		tip.classList.add('hex-tip');
  		svg.appendChild(tip);
  	}
  	// Update contents of tooltip
  	tip.innerHTML = '<a href="/hex_system/system_details#'+e.data.data.n+'" target="_blank">'+e.data.data.n+'</a>'+
  	  '<br />'+'Traveller Coordinates '+e.data.data.hex_loc.toLocaleString()+
  	  '<br /> Hexmap Coordinates q:'+e.data.data.q+' r:'+e.data.data.r;
  	// Update position of tooltip
  	bb = hex.getBoundingClientRect();
  	bbo = svg.getBoundingClientRect();
  	tip.style.left = Math.round(bb.left + bb.width/2 - bbo.left + svg.scrollLeft)+'px';
  	tip.style.top = Math.round(bb.top + bb.height/2 - bbo.top)+'px';
  });

</script>